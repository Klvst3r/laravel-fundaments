9. Editar un Libro

Al crear [bid].js tenemos el mismo problema que al principio y es que queremos anidar otra vista dentro del Id.

Para ello podremos crear una carpeta con este mismo nombre [bid]




pages
	|
	-/api
	|
	-_app.js
	- index.js
	-/libros
		|	
		- crear.js
		- index.js
		/ [bid]
			|
			- editar.js
			- index.js



Dentro crear la vista editar en este caso 

Creando el componente se llama BookEdit

La estructura de cada archivo se vera de la siguiente forma:

Todo dentro del directorio /pages


/libros/[bid]/index.js
---
	const  BookDetail = () => {
    return (
        <div>
            <h1>Book 1</h1>
        </div>
    )
}
export default BookDetail;
---




/libros/[bid]/editar.js
---
	const  BookEdit = () => {
	    return (
	        <div>
	            <h1>Book 1</h1>
	        </div>
	    )
	}
	export default BookEdit;
---


/libros/crear.js
---
	const  BookCreate = () => {
    return (
        <div>
            <h1>BookCreate</h1>
        </div>
    )
}
export default BookCreate;
---


/libros/index.js
---
	
const BookList = () => {
    return (
        <div>
            <h1>Libros</h1>
        </div>
    )
}
export default BookList
---


/index.js
---
	import Head from 'next/head'
	import Image from 'next/image'
	import styles from '../styles/Home.module.css'
	import Link from "next/link";

	export default function Home() {
	  return (
	    <div className={styles.container}>
	      <Head>
	        <title>Books App</title>
	        <meta name="description" content="Generated by create next app" />
	        <link rel="icon" href="/favicon.ico" />
	      </Head>
	      <Link href="/libros"></Link>
	    </div>
	  )
	}

---



Con esto ya se tienen todas las vistas necesarias.

No olvidar la etiqueta <head> a las demas vistas. Sobre todo para posicionamiento en buscadores


Estando en 

/index.js

import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Link from "next/link";

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Books App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <h1>Book App</h1>

        <Link></Link>
    </div>
  )
}


Se utiliza la etiqueta Link en Next.js para ir al listado de libros
En Next.js se utiliza el componente Link, importandose en la parte superior.

Quedando:

index.js
---
	import Head from 'next/head'
	import styles from '../styles/Home.module.css'
	import Link from "next/link";

	export default function Home() {
	  return (
	    <div className={styles.container}>
	      <Head>
	        <title>Books App</title>
	        <meta name="description" content="Generated by create next app" />
	        <link rel="icon" href="/favicon.ico" />
	      </Head>

	        <h1>Book App</h1>

	        <Link></Link>
	    </div>
	  )
	}
--

En el navegador
	http://localhost:3000/

Salida:
	Book App
		Book List	

Haciendo click en el enlace : Book List

y nos lleva a :
	http://localhost:3000/libros

Viendo que funciona.


Copiamos el link hacia el index de los libros

/libros/index.js

	...
	<h1>Libros</h1>
            <Link href="/libros/crear">Create Book</Link>


Importante importar el link
llevando a la URL
	http://localhost:3000/libros/crear


En libros/crear

    <>
            <h1>BookCreate</h1>
            <Link href="/libros">Book List</Link>
        </>

Este ink nos llevara a /libros        

	http://localhost:3000/libros

Funcionando todo hasta este punto	