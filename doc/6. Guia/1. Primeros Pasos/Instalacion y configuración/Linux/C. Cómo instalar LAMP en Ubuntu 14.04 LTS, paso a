C. Cómo instalar LAMP en Ubuntu 14.04 LTS, paso a paso 

Introducción
LAMP, es el stack más utilizado como entorno de desarrollo para programar aplicaciones. El término es actualmente el acrónimo de Linux, que representa el sistema operativo, Apache como servidor Web. Toda la información guardada en MySQL y el contenido es procesado por PHP.

Requisitos Previos
Tener instalado Ubuntu 14.04
Paso 1. Instalar Apache

El servidor web Apache es actualmente el servidor web más popular en el mundo, lo que hace que sea una gran opción por defecto para alojar un sitio web.

Podemos instalar fácilmente Apache utilizando el administrador de paquetes, apt. Un administrador de paquetes nos permite instalar software desde los repositorios mantenidos por Ubuntu.
Escribe en la terminal, los siguientes comandos:

sudo apt-get update
sudo apt-get install apache2

Desde que escribimos sudo, estas operaciones se ejecutarán con los privilegios del usuario root. Normalmente se te solicitará que introduzcas la contraseña para llevar a cabo estas operaciones.

Después de eso, tu servidor web está instalado.

Puedes verificar que todo salió sin problemas escribiendo la dirección local de tu servidor en el navegador web. Normalmente cualquiera de las siguientes dos puedes utilizar para ver tu servidor web en función.

http://127.0.0.1
http://localhost

Deberás ver la pantalla por defecto de Apache, la cual contiene información y ciertos propósitos de configuraciones. 

Si puedes ver esta página entonces tu servidor fue instalado correctamente.

Para poder configurar nuestro servidor se usa la siguiente sintaxis:

sudo service apache2 [start | restart | stop | status]

Por ejemplo, para detener el servidor web Apache, debes escribir: sudo service apache stop
Paso 2. Instalar MySQL

MySQL-Logo

Ahora que ya tenemos nuestro servidor web funcionando y activo, es hora de instalar MySQL. MySQL es un gestor de base de datos. Básicamente organizará y proveerá de acceso a todas las bases de datos donde nuestros sitios guarden información. De nuevo, usaremos apt para instalar nuestro servicio. Esta vez también instalaremos algunos paquetes más que nos ayudarán que nuestros componentes se comuniquen entre ellos:

sudo apt-get install mysql-server php5-mysql

Nota: En este caso ya no utilizamos el comando sudo apt-get update. Esto es debido a que anteriormente lo aplicamos para descargar e instalar nuestro servidor Apache, y los paquetes de nuestro repositorio están ya actualizados.

Durante la instalación el servidor de MySQL te solicitará que elijas una contraseña para tu usuario root. Esta es la cuenta administrativa de MySQL que contiene todos los privilegios para un usuario.  Asegurate de escribir una contraseña y no la olvides.

Cuando la instalación esté finalizada es necesario realizar unas cuantas configuraciones para que nuestro servidor MySQL esté un poco más seguro.

Primero, tenemos que decirle a MySQL cual será la estructura del directorio donde se almacenará la información. Podemos hacer esto de la siguiente manera:

sudo mysql_install_db

Después de eso, necesitaremos ejecutar un script que remueva algunos valores de acceso por defecto a nuestras bases de datos. Escribe lo siguiente en la terminal:

sudo mysql_secure_installation

Durante la ejecución se te preguntará la contraseña que estableciste anteriormente al usuario root de MySQL. Después se te solicitará si deseas cambiar la contraseña. Si quieres mantener la misma puedes escribir “n” para “no”.

Para el resto de las preguntas bastará con teclear ENTER y la instalación guardará los valores por defectos para esas opciones. Esto removerá los ejemplos de las bases de datos, accesos remotos, y algunas nuevas reglas que MySQL interpretará inmediatamente y realizará los cambios correspondientes.

Al finalizar, tu servidor estará completamente instalado y configurado.

Puedes comprobar la instalación escribiendo en la consola:

mysql -u root -p

Presionando ENTER, y escribiendo la contraseña correspondiente. La terminal cambiará de l siguiente manera:

mysql>

Y listo, puedes realizar todas tus operaciones mediante la terminal para volverte un PRO de MySQL y de la propia terminal. No olvides que todos los comandos de mysql se cierran con un ; al final de cada sentencia. Para salir de la terminal de MySQl escribe exit; seguido de ENTER.
Paso 3. Instalar PHP

PHP

PHP es el lenguaje de programación que nos ayudará a realizar los sitios web. Puede ejecutar scripts, conectarse a la base de datos MySQL y procesar todo nuestro contenido del lado del servidor.

Haremos uso una vez más del paquete apt para instalar todas las librerias correspondientes.

sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt

Esto instalará PHP sin problemas.
Paso 4. Dar preferencia al archivo index.php

En la mayoría de los casos será mejor modificar la manera en que Apache busca la dirección de algún directorio solicitado. Normalmente, si un usuario solicita un directorio al servidor, lo primero que hará Apache es buscar un archivo de nombre index.html. Tenemos que decirle a Apache que estamos interesador en que primero busque los archivos index.php.

Para hacer esto, escribimos en la terminal lo siguiente.

sudo gedit /etc/apache2/mods-enabled/dir.conf

Deberá verse como esto:

DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm

Moveremos la posicion de index.php hasta la primera.

DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm

Guardaremos el archivo y reiniciaremos el servidor Apache para que aplique esos cambios a la configuración.

sudo service apache2 restart

Para revisar que todo salió correctamente realizaremos un pequeño TEST a nuestro servidor web.

Escribiremos un archivo de nombre info.php. En Ubuntu 14.04, el directorio está localizado en /var/www/html/. Así que ahí será donde lo crearemos:

sudo nano /var/www/html/info.php

Se creará un archivo en blanco, y dentro escribiremos código PHP:

Guardaremos el archivo y necesitaremos la dirección de nuestro servidor para verificar que todo está en orden.

http://localhost/info.php


Si puedes ver correctamente esta página, entonces ya tienes funcionando tu stack LAMP, el primer paso para convertirte en un desarrollador web.